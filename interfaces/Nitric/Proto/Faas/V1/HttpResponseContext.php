<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: faas/v1/faas.proto

namespace Nitric\Proto\Faas\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Specific HttpResponse message
 * Note this does not have to be handled by the
 * User at all but they will have the option of control
 * If they choose...
 *
 * Generated from protobuf message <code>nitric.faas.v1.HttpResponseContext</code>
 */
class HttpResponseContext extends \Google\Protobuf\Internal\Message
{
    /**
     * The request headers...
     *
     * Generated from protobuf field <code>map<string, string> headers = 1;</code>
     */
    private $headers;
    /**
     * The HTTP status of the request
     *
     * Generated from protobuf field <code>int32 status = 2;</code>
     */
    protected $status = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array|\Google\Protobuf\Internal\MapField $headers
     *           The request headers...
     *     @type int $status
     *           The HTTP status of the request
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Faas\V1\Faas::initOnce();
        parent::__construct($data);
    }

    /**
     * The request headers...
     *
     * Generated from protobuf field <code>map<string, string> headers = 1;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getHeaders()
    {
        return $this->headers;
    }

    /**
     * The request headers...
     *
     * Generated from protobuf field <code>map<string, string> headers = 1;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setHeaders($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->headers = $arr;

        return $this;
    }

    /**
     * The HTTP status of the request
     *
     * Generated from protobuf field <code>int32 status = 2;</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * The HTTP status of the request
     *
     * Generated from protobuf field <code>int32 status = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkInt32($var);
        $this->status = $var;

        return $this;
    }

}

