<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: faas/v1/faas.proto

namespace Nitric\Proto\Faas\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Messages the server is able to send to the client
 *
 * Generated from protobuf message <code>nitric.faas.v1.ServerMessage</code>
 */
class ServerMessage extends \Google\Protobuf\Internal\Message
{
    /**
     * Server message ID, used to pair requests/responses
     *
     * Generated from protobuf field <code>string id = 1;</code>
     */
    protected $id = '';
    protected $content;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $id
     *           Server message ID, used to pair requests/responses
     *     @type \Nitric\Proto\Faas\V1\InitResponse $init_response
     *           Server responding
     *           with client configuration details to an
     *           InitRequest
     *     @type \Nitric\Proto\Faas\V1\TriggerRequest $trigger_request
     *           Server requesting client to
     *           process a trigger
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Faas\V1\Faas::initOnce();
        parent::__construct($data);
    }

    /**
     * Server message ID, used to pair requests/responses
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Server message ID, used to pair requests/responses
     *
     * Generated from protobuf field <code>string id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Server responding
     * with client configuration details to an
     * InitRequest
     *
     * Generated from protobuf field <code>.nitric.faas.v1.InitResponse init_response = 2;</code>
     * @return \Nitric\Proto\Faas\V1\InitResponse
     */
    public function getInitResponse()
    {
        return $this->readOneof(2);
    }

    public function hasInitResponse()
    {
        return $this->hasOneof(2);
    }

    /**
     * Server responding
     * with client configuration details to an
     * InitRequest
     *
     * Generated from protobuf field <code>.nitric.faas.v1.InitResponse init_response = 2;</code>
     * @param \Nitric\Proto\Faas\V1\InitResponse $var
     * @return $this
     */
    public function setInitResponse($var)
    {
        GPBUtil::checkMessage($var, \Nitric\Proto\Faas\V1\InitResponse::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Server requesting client to
     * process a trigger
     *
     * Generated from protobuf field <code>.nitric.faas.v1.TriggerRequest trigger_request = 3;</code>
     * @return \Nitric\Proto\Faas\V1\TriggerRequest
     */
    public function getTriggerRequest()
    {
        return $this->readOneof(3);
    }

    public function hasTriggerRequest()
    {
        return $this->hasOneof(3);
    }

    /**
     * Server requesting client to
     * process a trigger
     *
     * Generated from protobuf field <code>.nitric.faas.v1.TriggerRequest trigger_request = 3;</code>
     * @param \Nitric\Proto\Faas\V1\TriggerRequest $var
     * @return $this
     */
    public function setTriggerRequest($var)
    {
        GPBUtil::checkMessage($var, \Nitric\Proto\Faas\V1\TriggerRequest::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getContent()
    {
        return $this->whichOneof("content");
    }

}

