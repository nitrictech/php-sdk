<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: document/v1/document.proto

namespace Nitric\Proto\Document\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>nitric.document.v1.DocumentQueryStreamRequest</code>
 */
class DocumentQueryStreamRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The collection to query
     *
     * Generated from protobuf field <code>.nitric.document.v1.Collection collection = 1;</code>
     */
    protected $collection = null;
    /**
     * Optional query expressions
     *
     * Generated from protobuf field <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     */
    private $expressions;
    /**
     * Optional query fetch limit
     *
     * Generated from protobuf field <code>int32 limit = 4;</code>
     */
    protected $limit = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Nitric\Proto\Document\V1\Collection $collection
     *           The collection to query
     *     @type \Nitric\Proto\Document\V1\Expression[]|\Google\Protobuf\Internal\RepeatedField $expressions
     *           Optional query expressions
     *     @type int $limit
     *           Optional query fetch limit
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Document\V1\Document::initOnce();
        parent::__construct($data);
    }

    /**
     * The collection to query
     *
     * Generated from protobuf field <code>.nitric.document.v1.Collection collection = 1;</code>
     * @return \Nitric\Proto\Document\V1\Collection
     */
    public function getCollection()
    {
        return isset($this->collection) ? $this->collection : null;
    }

    public function hasCollection()
    {
        return isset($this->collection);
    }

    public function clearCollection()
    {
        unset($this->collection);
    }

    /**
     * The collection to query
     *
     * Generated from protobuf field <code>.nitric.document.v1.Collection collection = 1;</code>
     * @param \Nitric\Proto\Document\V1\Collection $var
     * @return $this
     */
    public function setCollection($var)
    {
        GPBUtil::checkMessage($var, \Nitric\Proto\Document\V1\Collection::class);
        $this->collection = $var;

        return $this;
    }

    /**
     * Optional query expressions
     *
     * Generated from protobuf field <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getExpressions()
    {
        return $this->expressions;
    }

    /**
     * Optional query expressions
     *
     * Generated from protobuf field <code>repeated .nitric.document.v1.Expression expressions = 3;</code>
     * @param \Nitric\Proto\Document\V1\Expression[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setExpressions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Nitric\Proto\Document\V1\Expression::class);
        $this->expressions = $arr;

        return $this;
    }

    /**
     * Optional query fetch limit
     *
     * Generated from protobuf field <code>int32 limit = 4;</code>
     * @return int
     */
    public function getLimit()
    {
        return $this->limit;
    }

    /**
     * Optional query fetch limit
     *
     * Generated from protobuf field <code>int32 limit = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkInt32($var);
        $this->limit = $var;

        return $this;
    }

}

